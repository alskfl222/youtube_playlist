user nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" "$request_uri" "$uri"'
                      '"$http_user_agent" "$http_x_forwarded_for"';    
    access_log  /var/log/nginx/access.log  main;
    sendfile on;
    keepalive_timeout 65;

    upstream client {
        server client:80;
    }

    upstream server {
        server server:4000;
    }

    server {
      listen 80;
      listen [::]:80;

      location / {
          proxy_pass         http://client;
          proxy_redirect     off;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-Forwarded-Proto $scheme;
          proxy_http_version 1.1; 
          proxy_set_header   Upgrade $http_upgrade; 
          proxy_set_header   Connection "upgrade"; 
          proxy_set_header   Host $host; 
      }

      location /server/ {
          proxy_pass         http://server;
          proxy_redirect     off;
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   X-Forwarded-Proto $scheme;
          proxy_http_version 1.1; 
          proxy_set_header   Upgrade $http_upgrade; 
          proxy_set_header   Connection "upgrade"; 
          proxy_set_header   Host $host; 
      }

      location /socket.io/ {
          # rewrite ^/socket.io(.*)$ /server/socket.io/$1 break;
          proxy_pass http://server;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
      }
    }
}
